.TH "texpack" "1" "Sun Aug  6 17:19:41 MSD 2006"
.SH "ИМЯ"
texpack  объединение большого количества маленьких картинок в несколько крупных.
.SH "ОБЗОР"
.nf
.B texpack --source-dir=<path to directory> --output=<file template> [options]\fP
.B texpack --list=<path to file> --output=<file template> [options]
.fi
.SH "ОПИСАНИЕ"
Программа texpack предназначена для объединения большого количества мелких текстур в несколько больших. Это необходимо для программ активно использующих трехмерную графику. Так как в противном случае количество данных передаваемых на графический ускоритель может быть просто огромным, что повлечет за собой снижение производительности.
Данная программа представляет собой утилиту коммандной строки. На входе она получает список графических файлов (директорию или файл со списком). Затем эти файлы упаковываются в большую текстуру (ограниченную заданными размерами). Если все файлы в нее не помещаются, то создается следующая текстура и т.д. На экран (или в файл) выводится информация о степени упаковки (качестве), а так же служебная информация, необходимая для последующего востановления исходных файлов (смещения по горизонтали и вертикали до левого верхнего и правого нижнего углов и был ли поворот).
Программе texpack требуется передать, как минимум, два обязательных ключа. Один из них сообщает программе где брать исходные файлы, а второй  под каким именем создавать получившиеся.
.SH "ОБЯЗАТЕЛЬНЫЕ ПАРАМЕТРЫ"
.TP
.B -s, --source-dir=DIR
задает путь к директории с исходными файлами. Программа попытается открыть все, находящиеся там файлы. Если хоть один файл будет иметь неподдерживаемый формат, то программа аварийно завершится.
.TP
.B -l, --list=FILE
задает файл, который содержит список исходных файлов.
.TP
.B -o, --output=FILE
задает шаблон выходных файлов. Все полученные в ходе работы текстуры будут сохраняться под именами FILE#, где # - это целое число (0, 1, 2...).
.SH "ОПЦИИ"
.TP
.B -r, --relative
задает вывод координат исходной картинки в относительных координатах (например, xr = x / result_width).
.TP
.B -f, --file=FILE
задает вывод информации для востановления в указанный файл. Без этой опции вывод производится в stdout (на консоль).
.TP
.B -w, --width=WIDTH
задает ширину получаемых текстур. Ширина полученных текстур будет равна W. Если не указана опция -n, то W будет округлен к ближайшей большей степени двойки (512, 1024 и т.п.). По умолчанию не задана.
.TP
.B -W, --max-width=WIDTH
задает максимальную ширину получаемой текстуры. Данная опция более гибкая, нежели -w, так как позволяет программе выбирать оптимальную ширину для результирующей картинки. По умолчанию 2048.
.TP
.B -H, --max-height=HEIGHT
задает максимальную высоту получаемой текстуры. По умолчанию, 2048.
.TP
.B -F, --format=FORMAT
задает пользовательский формат вывода информации для востановления (см. ниже).
.TP
.B -b, --border=WIDTH
задает ширину бордюра в пикселях, который следует оставлять между упакованными картинками. По умолчанияю, 0.
.TP
.B -n, --native-size
запрещает округление размеров текстур до степени двойки. При этом качество работы программы сильно возрастает.
.TP
.B -a, --separate-by-alpha
заставляет программу отделить исходные картинки, которые используют альфа-канал, и упаковать их отдельно от остальных. При большом количестве картинок без альфа-канала (или где он не используется) позволяет сэкономить место.
.TP
.B -R, --use-rotations
заставляет программу использовать вращение исходных текстур на 90 градусов против часовой стрелки для улучшения упаковки.
.SH "СТАНДАРТНЫЕ ОПЦИИ"
.TP
.B --help
вывод справки на стандартный вывод и успешное завершение
.TP
.B -v, --version
вывод версии на стандартный вывод и успешное завершение

.SH "КОММЕНТАРИИ"
	Опция --format задает формат вывода информации для востановления. Ее значение используется в функции fprintf(3). Есть два встроенных формата: один используется, когда программа запущена с опцией --relative, а второй  без. Формат может соделжать любые символы (только символ процента надо экранировать еще одним: `%%'), а так же макросы:
.TP
.B %1$s
название получаемой текстуры
.TP
.B %2$s
название исходной картинки
.TP
.B %3$u
смещение в пикселях по горизонтали до левого края картинки
.TP
.B %4$u
смещение в пикселях по вертикали до верхнего края картинки
.TP
.B %5$u
смещение в пикселях по горизонтали до правого края картинки
.TP
.B %6$u
смещение в пикселях по вертикали до нижнего края картинки
.TP
.B %7$f
относительное смещение по горизонтали до левого края картинки
.TP
.B %8$f
относительное смещение по вертикали до верхнего края картинки
.TP
.B %9$f
относительное смещение по горизонтали до правого края картинки
.TP
.B %10$f
относительное смещение по вертикали до нижнего края картинки
.TP
.B %11$s
если картинка подвергалась вращению, то принимает значение `rotated'. В противном случае  ничего.
.TP
.B %12$u
ширина картинки в пикселях
.TP
.B %13$u
высота картинки в пикселях
.TP
.B %14$f
относительная ширина картинки
.TP
.B %15$f
относительная высота картинки
.SH "ПРИМЕРЫ"
Предположим, что в директории /home/user/pictures находится много мелких картинок (меньше 1024x1024) в формате PNG, некоторые из которых имеют альфа-канал...
.PP
.nf
.B texpack -s /home/user/pictures -o /home/user/texture
.fi
Создаст несколько файлов с именами /home/user/texture#.png, где # целое число. А на консоль будут выведены в виде таблицы название полученного файла, название исходного файла и четыре числа.
.PP
.nf
.B find /home/user/pictures -iname `*.png' -type f > /home/user/pictures/list.txt
.B texpack -l /home/user/pictures/list.txt -o /home/user/pictures/texture\fR
.fi
Полностью аналогична действию предыдущего примера за тем исключением, что если в директории /home/user/pictures были файлы с расширением отличным от `png', то они обработаны не будут.
.PP
.nf
.B texpack -s /home/user/pictures -o /home/user/texture -W 1024 -H 1024
.fi
Аналогична первому примеру, только полученные файлы будут иметь размеры не более 1024x1024.
.PP
.nf
.B texpack -s /home/user/pictures -o /home/user/texture -W 1024 -H 1024 -a -R -r
.fi
Все картинки разобьются на два набора  с альфа-каналом и без него. Оба набора будут упаковываться раздельно (сначала без альфа-канала). Некоторые исходные картинки будут повернуты против часовой стрелки на 90 градусов. Максимальный размер полученных текстур не будет превышать 1024x1024. На консоль будут выводиться относительные смещения, а так же слова rotated в правом столбце для повернутых картинок.
.SH "ЗАМЕЧАНИЯ"
.PP
Все относительные размеры указываются относительно соответствующего размера результирующей текстуры. Например, относительное смещения по горизонтали (oox) и вертикали (ooy) считаются так: oox = ox / tex_width, ooy = oy / tex_height. Здесь ox и oy  смещения по горизонтали и вертикали в пикселях, а tex_width и tex_height  размеры результирующей текстуры.
.PP
Правый и нижний край выходят за пределы картинки. Причем, справедливы правила: right = left + width и bottom = top + height.
.SH "СМОТРИ ТАКЖЕ"
\fI\fBfprintf(3)\fP\fR

